<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>https://kamhawinotes.com/</title>
   
   <link>http://localhost:4000</link>
   <description>The blog of Mohamed Elkamhawi</description>
   <language>en-uk</language>
   <managingEditor> Mohamed Elkamhawi</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>What is Blockchain and how does Bitcoin work</title>
	  <link>//blockchain-and-bitcoin</link>
	  <author>Mohamed Elkamhawi</author>
	  <pubDate>2017-12-23T13:33:33+02:00</pubDate>
	  <guid>//blockchain-and-bitcoin</guid>
	  <description><![CDATA[
	     <p>Blockchain is great technology, it promises to disturb and change a number of
industries that is not limited to the technology scene.</p>

<p>The most famous application for the blockchain is BitCoin. and if it can navigate
and escape the gambling craze happening right now, it can be the next big step in
the evolution of the economy and the financial industry. but cryptocurrencies are
not the only application for the blockchain technology, we are only scratching
the surface of what is possible.</p>

<p>What the blockchain achieves is that it liberates us from the need to keep a central
record for any type of valuable assets. blockchain is a distributed system, every
user in the system helps keep track of who owns what.</p>

<h2 id="understanding-the-blockchain-bitcoin-as-an-example">understanding the blockchain: bitcoin as an example</h2>

<p>Right now the financial system and the economy is built on the presence of central
banks responsible for printing banknotes, these banks must be trusted by the public
for those notes to have any value, and these banks are responsible for guaranteeing
a stable value for those notes.</p>

<p>In a network like bitcoin’s, no central entity exist, nobody has the power/responsibility
of keeping record of transactions, instead, the transaction record (the ledger) is public,
it is shared across the network, people can download it and keep track of whats happening,
and even insert transactions in it. this seems a bit chaotic, but all this happens
according to rules defined in the software, the code on which the system runs.</p>

<h4 id="history-of-the-bitcoin">History of the bitcoin</h4>

<p><img src="http://localhost:4000/assets/images/bitcoin.png" alt="bitcoin logo" width="250px" align="right" /></p>

<p>in 18 August 2008, the domain name <a href="https://bitcoin.org" target="_blank">bitcoin.org</a>
was registered. In November that year, a link to a paper authored by <em>Satoshi Nakamoto</em>
titled “Bitcoin: A Peer-to-Peer Electronic Cash System” was posted to a cryptography
mailing list.</p>

<p>Nobody knows who is <em>Satoshi Nakamoto</em>, he implemented the bitcoin software as
open source code and released it in January 2009.</p>

<p>In January 2009, the bitcoin network came into existence after <em>Satoshi</em> mined
the first ever block on the chain, known as the genesis block, for a reward of
50 bitcoins.</p>

<p><img src="http://localhost:4000/assets/images/times.png" alt="The Times Jan 3rd headline" width="250px" align="right" />
Embedded in the coinbase of this block was the following text:</p>

<blockquote>
  <p>“The Times 03/Jan/2009 Chancellor on brink of second bailout for banks.”</p>
</blockquote>

<p>This was probably intended as proof that the block was created on or after January
3rd 2009, as well as a comment on the instability caused by fractional-reserve banking.
Additionally, it suggests that <em>Satoshi Nakamoto</em> may have lived in the United Kingdom.</p>

<p>Programmer <em>Hal Finney</em> downloaded the bitcoin software the day it was released,
and received 10 bitcoins from Nakamoto in the world’s first bitcoin transaction.</p>

<p>The value of the first bitcoin transactions were negotiated by individuals on
the bitcointalk forums with one notable transaction of 10,000 BTC used to indirectly
purchase two pizzas delivered by Papa John’s.</p>

<h4 id="technical-details">Technical details</h4>

<p>Bitcoin is built on the technology called <em>blockchain</em>. Blockchain is a
continuously growing list of records, called blocks, which are linked and secured
using cryptography.</p>

<p><img src="http://localhost:4000/assets/images/bc.jpeg" alt="The blockchain" width="700px" /></p>

<p>The bitcoin blockchain is a huge public ledger (over 136 GB as of October 2017),
keeping records of all the transactions happening within the system.</p>

<p>The network consists of many mutually distrustful parties that are called “miners”,
who are together responsible for guaranteeing the integrity of the system and the
validity of transactions. A miner is someone who is willing to offer computational
power to validate transactions, add them to a block and add that block to the chain.
To do that, the miner must offer proof of work, a solution to a very hard
mathematical equation, using cryptography. In exchange, the miner who proofs the
equation and adds the block to the system is rewarded with freshly minted bitcoins.</p>

<p>The block reward is the only way that new bitcoins are created on the network.
<em>Satoshi</em> explained this in an early email post in 2009:</p>

<blockquote>
  <p>“Coins have to get initially distributed somehow, and a constant rate seems like
the best formula.” - <em>Satoshi</em></p>
</blockquote>

<p>The block reward started at 50 BTC in block # 1 and halves every 210,000 blocks.
This means every block up until block # 210,000 rewards 50 BTC, while block 210,001
rewards 25.</p>

<p>Eventually, the reward will decrease to zero, and the limit of 21 million bitcoins
will be reached by 2140; the record keeping will then be rewarded by transaction
fees solely.</p>

<blockquote>
  <p>“In a few decades when the reward gets too small, the transaction fee will
become the main compensation for nodes.” - <em>Satoshi</em></p>
</blockquote>

<p>when a user spends some money, a transaction is broadcast to the network,
all miners collect the latest transactions and insert them in blocks,
each miner then tries to solve the mathematical equation before all other miners,
the miner who successfully solves the equation broadcasts the newly “mined” block
to the network, and that block is added to the block chain, the successful miner
is rewarded some newly minted bitcoins.</p>

<p>Each block in the block chain contains a certain number of transactions, as well
as a hash, which points to the previous block in the block chain, this means that
as chain progresses, older blocks become more secure, they can’t be tampered with,
because to change a block, or one transaction within a block, an attacker must
mine new blocks and attach them to the tampered block, in which case he has
created a new branch of the chain, and he must continue building his branch in
a rate faster than the original branch of the network, for his branch to be
considered legitimate. an attacker can theoretically achieve this if he owns
more than 50% of the computing power in the network, which is impossible.</p>

<p><img src="http://localhost:4000/assets/images/bc-attack.png" alt="Blockchain attack" width="700px" /></p>

<h2 id="other-applications-for-the-blockchain-technology">Other applications for the Blockchain technology</h2>

<p>Blockchain can change many industries and systems other than the monetary system,
any Industry that needs a reliable record of data that must be secure and trusted can
benefit a lot from Blockchains.</p>

<p>In December 2015, the Linux Foundation announced the creation of the <a href="https://en.wikipedia.org/wiki/Hyperledger" target="_blank">Hyperledger</a> Project,
which is an umbrella project of open source blockchains and related tools. many
companies are members of the project, including IBM, RedHat, VMWare, Intel…</p>

<p>Blockchain today is <a href="https://www-01.ibm.com/common/ssi/cgi-bin/ssialias?htmlfid=CPV03008USEN" target="_blank">used by Maersk in collaboration with IBM</a>
to digitize and simplify global trade and offer transparency in the shipping industry.</p>

<p><a href="https://www.youtube.com/watch?v=SV0KXBxSoio" target="_blank">Walmart is working with IBM</a>
to offer a way for shoppers to trace back the history of the food they are buying
from when it was planted until it reached them.</p>

<p>The <a href="https://venturebeat.com/2017/11/18/blockchain-could-change-everything-for-real-estate/" target="_blank">Real estate industry</a> is also expected to benefit from the blockchain technology, by virtue of
smart contracts, a system where contracts are activated automatically when their conditions
are met. blockchain can offer as well a reliable record for real estate ownership within
a city.</p>

<p>One thing is clear, The Blockchain technology is a game changer, a technology that will
affect many industries positively in the coming years.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Autonomous Vehicles: The Next Disruptive Technology</title>
	  <link>//Autonomous-Vehicles</link>
	  <author>Mohamed Elkamhawi</author>
	  <pubDate>2017-06-02T13:33:33+02:00</pubDate>
	  <guid>//Autonomous-Vehicles</guid>
	  <description><![CDATA[
	     <p>The ultimate goal of the tech industry is to eliminate routine, turning the
human attention away from repetitive tasks, to focus on creative ones.</p>

<p>This isn’t new, History is full of examples of developing tools to help
make accomplishing tasks easier, and usually the technological advancement creates
new unimagined markets, the invention of the printing press in 1440 is a clear
example, while it destroyed one of the oldest crafts (Hand copying books), it
created new professions no one imagined were needed, such as journalism, book
publishing &amp; distribution.</p>

<p>This is why disruption is important, it is actually a need, introducing new
technologies that completely transforms the economy is a sign of the advancement
of the human race.</p>

<p>Creating the autonomous vehicle is going to cause social, political, and economic
disruptions of massive scales. not all the consequences are clear now, what is
clear is that the transportation sector as well as the car manufacturing sector
have reached the point of saturation long ago.</p>

<p>Car companies today compete in reducing prices, having a wider distribution
network, and joining new markets. the product itself sees no innovation, within
the same price range all models across different companies are similar. the same
thing happened in the transportation sector, with the exception of ride sharing
apps, the whole market competes in reducing profit margins and costs to reduce
prices, but no real innovation.</p>

<p>Different players from both sectors (Transportation &amp; Car manufacturing)
are now racing to reach the same goal: getting rid of the steering wheel. Startups are
emerging, old companies are <a href="http://www.businessinsider.com/ford-is-no-longer-a-car-company-2017-5" target="_blank">restructuring</a>,
whoever reaches this goal first will not only strike a gold mine, but will
change the way humans live forever.</p>

<p>What is clear now is that developing self-driving vehicles will cause these
two sectors to merge into one. car companies will no longer sell cars to consumers,
nobody will need to own a car, instead people will summon cars using their mobile
phones. cars will patrol the streets dropping off one customer to go to another.
there are already some <a href="http://www.cnbc.com/2017/05/23/reporters-notebook-be-warned-us25-oil-is-coming-and-along-with-it-a-new-world-order.html" target="_blank">estimates</a> that using robot-taxis will be 10x cheaper than owning
a car.</p>

<p>Eliminating the human factor will result in safer trips, the rate of accidents
is going to drop significantly. this goal alone is enough to encourage people to
invest in developing this technology.</p>

<p>The shipping sector is going to be affected as well, with autonomous trucks moving
goods 24/7 between countries, shipping costs will drop and goods will reach their
destinations faster.</p>

<p>Another thing that is going to change is the absurd notion that every one should
have his/her own car. Fewer cars will serve more people, resulting in fewer street
congestions, less time on the road and higher productivity.</p>

<p><em>Transport As A Service (TAAS)</em> is going to be the norm. granted, a lot of people
will lose their jobs, mainly drivers as well as people working in the vehicle distribution
sector. but new sectors will emerge, new jobs will be created, and people will
enjoy less routine and more life.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Representing numbers in computers</title>
	  <link>//representing-numbers-in-computers</link>
	  <author>Mohamed Elkamhawi</author>
	  <pubDate>2017-04-25T13:33:33+02:00</pubDate>
	  <guid>//representing-numbers-in-computers</guid>
	  <description><![CDATA[
	     <p>One of the basic laws on which computers were designed and built over time is
<strong>abstraction</strong>. under the hood all we can see and interact with on computers
is just a bunch of electronic signals stored and manipulated in magnetic or
electric form.</p>

<p>Wether it is a great painting by Van Gogh or the latest Tom Hanks movie,
behind the scene it is just a collection of zeros and ones stored on a disk,
converted into a collection of colored dots and displayed on a screen.</p>

<p>Any sort of interaction on computers involves a <strong>Decoder/Encoder</strong>, there
is a continuous process of translation going on between the screen/speaker and
the storage disk.</p>

<p>All of this was built on a simple mathematical system, the binary system, which
is used to represent any number by using only two symbols: <strong>0</strong> &amp; <strong>1</strong>.</p>

<p>In this article I’m going to explain how numbers are stored in computers. touching
these topics:</p>

<ul>
  <li><a href="#binary_numbers">Binary numbers</a>
    <ul>
      <li><a href="#twos_complement">Two’s complement</a></li>
    </ul>
  </li>
  <li><a href="#floating_point">Floating Point</a>
    <ul>
      <li><a href="#real_to_float">Converting a real number into a float representation</a></li>
    </ul>
  </li>
</ul>

<h2 id="binary_numbers">Binary numbers</h2>

<p>Binary numbers are base 2, meaning that they are written using only two digits:
0 or 1. each digit is called a <strong><em>bit</em></strong> which is an abbreviation for <strong>bi</strong>nary
digi<strong>t</strong>.</p>

<p>The position of the bit determines its weight. in the decimal system (base 10),
the weight of each position to the left is an increasing power of ten.
starting from ones in the rightmost position <code class="highlighter-rouge">10^0</code>, then tenth <code class="highlighter-rouge">10^1</code>,
hundreds <code class="highlighter-rouge">10^2</code>, and so on; the same logic applies to the binary system (base 2)
only with different weights, the rightmost position has the weight <code class="highlighter-rouge">2^0</code>,
then <code class="highlighter-rouge">2^1</code> to the left of it, then <code class="highlighter-rouge">2^2</code>, and so on.</p>

<p>For example the number:</p>

<blockquote>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>100101
</code></pre></div>  </div>
</blockquote>

<p>to convert this number to the decimal notation, we simply multiply each bit with
it’s weight and add them all, so from right to left:</p>

<blockquote>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1*2^0 + 0*2^1 + 1*2^2 + 0*2^3 + 0*2^4 + 1*2^5
</code></pre></div>  </div>
</blockquote>

<p>that is:</p>

<blockquote>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1 + 0 + 4 + 0 + 0 + 32 = 37
</code></pre></div>  </div>
</blockquote>

<p>The problem with this system is that as it only uses two symbols to represent numbers,
numbers can occupy larger spaces than in decimal, in the previous example the number <code class="highlighter-rouge">37</code>
needed 6 digits to be represented in binary.</p>

<p>In programming languages such as <strong>C</strong> or <strong>Java</strong>, there are different value types
that can hold numbers, the integer <em>int</em> type in most systems is 32-bit wide,
that can hold numbers from 32 bits of ZEROS to 32 bits of ONES, which represents numbers
from 0 up to 4,294,967,295 (2^32 - 1). and this is for positive numbers only,
to represent negative numbers as well, a <em>signed int</em> is used, along with a
technique called <strong>Two’s complement</strong>.</p>

<h4 id="twos_complement">Two’s complement</h4>

<p>for a successful representation of negative numbers, it must respect a simple
mathematical rule:</p>

<blockquote>
  <p>when adding a negative number to it’s positive version, the result is zero.</p>
</blockquote>

<p>The two’s complement satisfies that rule, to represent the number <code class="highlighter-rouge">-7</code>, start
with the number <code class="highlighter-rouge">+7</code>, I’ll use a 4-bit representation but the same
technique applies for 32-bit ints:</p>

<p><code class="highlighter-rouge">7</code> =&gt; <code class="highlighter-rouge">4 + 2 + 1</code> =&gt; <code class="highlighter-rouge">1*2^2 + 1*2^1 + 1*2^0</code> which, stored in a 4-bit
word is <code class="highlighter-rouge">0111</code>.</p>

<p>By converting each bit of the number <code class="highlighter-rouge">0111</code> to it’s inverse, we get <code class="highlighter-rouge">1000</code>,
which is the <strong>One’s complement</strong> of <code class="highlighter-rouge">7</code>. adding one to the result, we get <code class="highlighter-rouge">1001</code>,
which is the <strong>Two’s complement</strong> of <code class="highlighter-rouge">7</code>, aka <code class="highlighter-rouge">-7</code>.</p>

<p>to verify the addition rule:</p>

<blockquote>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 0111
+
 1001
=
 0000
</code></pre></div>  </div>
</blockquote>

<p>the extra <strong><em>carry-out 1</em></strong> overflows out of bounds, hence we get <code class="highlighter-rouge">0000</code> as the result.</p>

<p>In a <em>signed int</em> all negative numbers has a <code class="highlighter-rouge">1</code> in it’s leftmost bit. that
makes the range that a <em>signed int</em> can hold: <code class="highlighter-rouge">−2,147,483,648</code> <em>(-2^31)</em> to
<code class="highlighter-rouge">2,147,483,647</code> <em>(2^31 - 1)</em>.</p>

<h2 id="floating_point">Floating Point</h2>

<p>The previous examples demonstrated how integers are represented on computers, but
<em>int</em> is not the only value type available. to represent <em>Real numbers</em>, <strong>C</strong> and
other programming languages introduce the <em>float</em> and <em>double</em> types.</p>

<p>The problem with real numbers is the need to always represent them in memory
in a limited number of bits regardless of the location of the decimal point
(hence this method is called <em>floating</em> point), so that a float variable
(which is 32 bit-wide) can hold the number 100.5 or the number 1.005</p>

<p>floating point calculations are done using these equations:</p>

<p><strong>Float equation:</strong> <code class="highlighter-rouge">( -1 )^S * ( 1 + F * 2^-23 ) * 2 ^ ( E - 127 )</code></p>

<p><strong>Double equation:</strong> <code class="highlighter-rouge">( -1 )^S * ( 1 + F * 2^-52 ) * 2 ^ ( E - 1023 )</code></p>

<p><strong>S</strong> <strong><em>(sign bit)</em></strong>, <strong>F</strong> <strong><em>(fraction bits)</em></strong> and <strong>E</strong> <strong><em>(exponent bits)</em></strong>
are the values stored in memory to represent a real number.</p>

<p>A <em>float</em> variable in <strong>C</strong> is 32 bits-wide, starting from right, the <em>fraction bits (F)</em>
occupies 23 bits from bit #0 till bit #22, the <em>exponent bits (E)</em> occupies 8 bits
from bit #23 till bit #30, the <em>sign bit (S)</em> is the leftmost bit (bit #31).</p>

<p>A more precise <em>double</em> variable is 64 bits-wide. the <em>fraction bits (F)</em> occupies
52 bits from bit #0 till bit #51, the <em>exponent bits (E)</em> occupies 11 bits from
bit #52 till bit #63, the <em>sign bit (S)</em> is the leftmost bit (bit #64).</p>

<p>for example the number: <code class="highlighter-rouge">0 01111100 00000000000000000000000</code></p>

<p>here the sign bit <strong>S</strong> is <em style="color: red">0</em>, meaning a positive number,
while the exponent bits <strong>E</strong> are <code class="highlighter-rouge">01111100</code> which is <em style="color: red">124</em>
in decimal, and the fraction bits <strong>F</strong> equals <em style="color: red">0</em>. replacing
these values in the float equation:</p>

<p>(-1) ^ <em style="color: red">0</em> * ( 1 + <em style="color: red">0</em> * 2^(-23) )</p>
<ul>
  <li>2 ^ ( <em style="color: red">124</em> - 127 ) = 1 * 1 * 2^(-3) = 0.125</li>
</ul>

<p>another example: <code class="highlighter-rouge">0 10000101 10010010000000000000000</code></p>

<p>The sign bit <strong>S</strong> is <em style="color: red">0</em>, while the exponent bits <strong>E</strong> are
<code class="highlighter-rouge">10000101</code> which is <em style="color: red">133</em> in decimal, and the fraction
bits <strong>F</strong> are <code class="highlighter-rouge">10010010000000000000000</code>, or <em style="color: red">4,784,128</em>
in decimal. using the float equation:</p>

<p>(-1) ^ <em style="color: red">0</em> * ( 1 + <em style="color: red">4784128</em> * 2^(-23) )</p>
<ul>
  <li>2 ^ ( <em style="color: red">133</em> - 127 ) = 1 * 1.5703125 * 2^6 = 100.5</li>
</ul>

<h4 id="real_to_float">Converting a real number into a float representation</h4>

<p>To convert a real number like <code class="highlighter-rouge">15.375</code> into a float, convert the integer part <code class="highlighter-rouge">15</code>
normally to a binary as described <a href="#binary_numbers">here</a>. the result is <code class="highlighter-rouge">1111</code>.</p>

<p>Then multiply the fractional part of the number <code class="highlighter-rouge">0.375</code> by <code class="highlighter-rouge">2</code>, that will yield
a new real number, separate the integer part in the answer as a bit of the 23 binary
fraction bits <strong>F</strong> and multiply the fractional part of the answer by <code class="highlighter-rouge">2</code> again,
repeat until the answer is 0 or filling all the <strong>F</strong> bits.</p>

<blockquote>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.375 * 2 = 0.75 = 0 + 0.75 =&gt; ```0```
0.750 * 2 = 1.50 = 1 + 0.50 =&gt; ```1```
0.500 * 2 = 1.00 = 1 + 0.00 =&gt; ```1```
</code></pre></div>  </div>
</blockquote>

<p>So the decimal <code class="highlighter-rouge">0.375</code> becomes in binary <code class="highlighter-rouge">0.011</code>, and the whole number
<code class="highlighter-rouge">15.375</code> becomes <code class="highlighter-rouge">1111.011</code> in binary.</p>

<p>To store this number in memory, saving the information about the position of the decimal
point as well, insert this number in the equation, shift the binary point <em style="color: red">n</em>
places to the left so that the result becomes in the form <em style="color: red">1.xxxx</em>
and multiply the result by 2^<em style="color: red">n</em> to compensate, in this example
that means shifting the binary point <em style="color: red">3</em> places to the left
and multiplying the result by 2^<em style="color: red">3</em>:</p>

<blockquote>
  <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1111.011 = 1.111011 * 2^3 = 1 + 0.111011 * 2^3
</code></pre></div>  </div>
</blockquote>

<p>Comparing <code class="highlighter-rouge">1 + 0.111011 * 2^3</code> with the float equation
<code class="highlighter-rouge">( -1 )^S * ( 1 + F * 2^-23 ) * 2 ^ ( E - 127 )</code></p>

<p>E - 127 = 3 =&gt; E = 130 =&gt; E is <code class="highlighter-rouge">10000010</code></p>

<p>F * 2^(-23) = 0.111011 =&gt; F is <code class="highlighter-rouge">11101100000000000000000</code></p>

<p>S is <code class="highlighter-rouge">0</code> (a positive number).</p>

<p>So <code class="highlighter-rouge">15.375</code> is stored in computers as <code class="highlighter-rouge">0 10000010 11101100000000000000000</code>.</p>

<p>While floats and doubles do a great job representing real numbers, they are not
really precise, it is impossible to represent the wide range of real numbers in a
limited number of bits, so some numbers like <code class="highlighter-rouge">0.1</code> and <code class="highlighter-rouge">0.33</code> are only
approximated.</p>

	  ]]></description>
	</item>


</channel>
</rss>
